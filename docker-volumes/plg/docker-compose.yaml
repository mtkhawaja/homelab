services:

  grafana:
    image: "grafana/grafana:latest"
    container_name: grafana
    restart: unless-stopped
    networks:
      - proxy
    environment:
      - LOCAL_DOMAIN_NAME=${LOCAL_DOMAIN_NAME}
      - BASE_VOLUME_DIRECTORY=${BASE_VOLUME_DIRECTORY}
    volumes:
      - "$BASE_VOLUME_DIRECTORY/plg/grafana/data/grafana:/var/lib/grafana"
      - "$BASE_VOLUME_DIRECTORY/plg/grafana/data/provisioning/datasources:/etc/grafana/provisioning/datasources"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana.middlewares=grafana-https-redirect"
      - "traefik.http.routers.grafana-secure.entrypoints=https"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

  prometheus:
    image: "prom/prometheus:latest"
    container_name: prometheus
    restart: unless-stopped
    networks:
      - proxy
    environment:
      - LOCAL_DOMAIN_NAME=${LOCAL_DOMAIN_NAME}
      - BASE_VOLUME_DIRECTORY=${BASE_VOLUME_DIRECTORY}
    volumes:
      - "$BASE_VOLUME_DIRECTORY/plg/prometheus/data/prometheus:/prometheus"
      - "$BASE_VOLUME_DIRECTORY/plg/prometheus/data/config/prometheus.yaml:/etc/prometheus/prometheus.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.middlewares.prometheus-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.prometheus.middlewares=prometheus-https-redirect"
      - "traefik.http.routers.prometheus-secure.entrypoints=https"
      - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=proxy"

  node_exporter:
    image: "quay.io/prometheus/node-exporter:latest"
    container_name: prometheus-node-exporter
    restart: unless-stopped
    networks:
      - proxy
    pid: host
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  loki:
    image: "grafana/loki:latest"
    container_name: loki
    restart: unless-stopped
    networks:
      - proxy
    environment:
      - LOCAL_DOMAIN_NAME=${LOCAL_DOMAIN_NAME}
      - BASE_VOLUME_DIRECTORY=${BASE_VOLUME_DIRECTORY}
    volumes:
      - "$BASE_VOLUME_DIRECTORY/plg/loki/data/config/local-config.yaml:/etc/loki/local-config.yaml"
    command: -config.file=/etc/loki/local-config.yaml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.entrypoints=http"
      - "traefik.http.routers.loki.rule=Host(`loki.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.middlewares.loki-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.loki.middlewares=loki-https-redirect"
      - "traefik.http.routers.loki-secure.entrypoints=https"
      - "traefik.http.routers.loki-secure.rule=Host(`loki.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.routers.loki-secure.tls=true"
      - "traefik.http.routers.loki-secure.service=loki"
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
      - "traefik.docker.network=proxy"

  promtail:
    image: "grafana/promtail:latest"
    container_name: promtail
    environment:
      - LOCAL_DOMAIN_NAME=${LOCAL_DOMAIN_NAME}
      - BASE_VOLUME_DIRECTORY=${BASE_VOLUME_DIRECTORY}
    volumes:
      - "$BASE_VOLUME_DIRECTORY/plg/promtail/data/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml"
      - "/var/log:/var/log"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - proxy

networks:
  proxy:
    external: true
