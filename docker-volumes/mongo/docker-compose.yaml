services:

  mongo:
    image: mongo
    restart: always
    networks:
      - proxy
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - proxy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $ME_CONFIG_MONGODB_ADMINUSERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $ME_CONFIG_MONGODB_ADMINPASSWORD
      # For example:
      # mongodb://admin:admin@mongo:27017
      ME_CONFIG_MONGODB_URL: $ME_CONFIG_MONGODB_URL
      ME_CONFIG_BASICAUTH: false

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.entrypoints=http"
      - "traefik.http.routers.mongo-express.rule=Host(`mongo-express.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.middlewares.mongo-express-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.mongo-express.middlewares=mongo-express-https-redirect"
      - "traefik.http.routers.mongo-express-secure.entrypoints=https"
      - "traefik.http.routers.mongo-express-secure.rule=Host(`mongo-express.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.routers.mongo-express-secure.tls=true"
      - "traefik.http.routers.mongo-express-secure.service=mongo-express"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"
      - "traefik.docker.network=proxy"

networks:
  proxy:
    external: true

volumes:
  mongo-data:
