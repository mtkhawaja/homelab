services:
  sq-db:
    image: "postgres:latest"
    networks:
      - proxy
    container_name: "postgres-database-server"
    restart: "unless-stopped"
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      LOCAL_DOMAIN_NAME: $LOCAL_DOMAIN_NAME
      BASE_VOLUME_DIRECTORY: $BASE_VOLUME_DIRECTORY
    volumes:
      - "sq-postgres-data:/var/lib/postgresql/data"

  sonarqube:
    image: "sonarqube:community"
    hostname: "sonar-qube.local.$LOCAL_DOMAIN_NAME"
    networks:
      - proxy
    container_name: "sonarqube"
    restart: "unless-stopped"
    environment:
      SONAR_JDBC_URL: "jdbc:postgresql://sq-db:5432/sonar"
      SONAR_JDBC_USERNAME: "${POSTGRES_USER:-postgres}"
      SONAR_JDBC_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - "sq-data:/opt/sonarqube/data"
      - "sq-extensions:/opt/sonarqube/extensions"
      - "sq-logs:/opt/sonarqube/logs"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonar-qube.entrypoints=http"
      - "traefik.http.routers.sonar-qube.rule=Host(`sonar-qube.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.middlewares.sonar-qube-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonar-qube.middlewares=sonar-qube-https-redirect"
      - "traefik.http.routers.sonar-qube-secure.entrypoints=https"
      - "traefik.http.routers.sonar-qube-secure.rule=Host(`sonar-qube.local.$LOCAL_DOMAIN_NAME`)"
      - "traefik.http.routers.sonar-qube-secure.tls=true"
      - "traefik.http.routers.sonar-qube-secure.service=sonar-qube"
      - "traefik.http.services.sonar-qube.loadbalancer.server.port=9000"
      - "traefik.docker.network=proxy"

networks:
  proxy:
    external: true


volumes:
  sq-data:
    name: sq-data
  sq-postgres-data:
    name: sq-postgres-data
  sq-extensions:
    name: sq-extensions
  sq-logs:
    name: sq-logs